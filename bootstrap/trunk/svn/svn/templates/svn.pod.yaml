apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"name":"svn"},"name":"svn","namespace":"default"},"spec":{"containers":[{"image":"elleflorio/svn-server:latest","name":"svn","ports":[{"containerPort":80}],"volumeMounts":[{"mountPath":"/etc/subversion","name":"svnconfig"},{"mountPath":"/home/svn","name":"svndata"}]}],"volumes":[{"name":"svnconfig","persistentVolumeClaim":{"claimName":"svnconfig"}},{"name":"svndata","persistentVolumeClaim":{"claimName":"svndata"}}]}}
  labels:
    chart: '{{.Chart.Name}}-{{.Chart.Version}}'
    heritage: '{{.Release.Service}}'
    name: svn
    release: '{{.Release.Name}}'
  name: '{{ template "fullname" . }}-svn'
  namespace: '{{.Values.svn.namespace}}'
spec:
  volumes:
  {{- if .Values.persistence.svnconfig.enabled}}
  - name: svnconfig
    persistentVolumeClaim:
      claimName: '{{ template "fullname" . }}-svnconfig'
  {{- else }}
    emptyDir: {}
  {{- end }}
  {{- if .Values.persistence.svndata.enabled}}
  - name: svndata
    persistentVolumeClaim:
      claimName: '{{ template "fullname" .}}-svndata'
  {{- else }}
    emptyDir: {}
  {{- end }}
  containers:
  - image: '{{.Values.svn.svn.image}}:{{.Values.svn.svn.imageTag}}'
    imagePullPolicy: '{{.Values.svn.svn.imagePullPolicy}}'
    name: svn
    ports:
    - containerPort: 80
      protocol: TCP
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/subversion
      name: svnconfig
    - mountPath: /home/svn
      name: svndata
  restartPolicy: '{{.Values.svn.restartPolicy}}'
  schedulerName: default-scheduler
  serviceAccount: default
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
